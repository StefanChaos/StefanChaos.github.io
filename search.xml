<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Github &amp; hexo for free blogs</title>
    <url>/2021/01/03/Github-hexo-for-free-blogs/</url>
    <content><![CDATA[<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ol>
<li><a href="https://hexo.io/zh-cn/docs/">Hexo官网</a></li>
<li><a href="http://theme-next.iissnan.com/theme-settings.html">主题Next官网</a></li>
<li><a href="https://www.cnblogs.com/jie-fang/p/13445913.html">博客园文章，主要是环境准备</a></li>
</ol>
<h1 id="Github-amp-Hexo-建立博客"><a href="#Github-amp-Hexo-建立博客" class="headerlink" title="Github &amp; Hexo 建立博客"></a>Github &amp; Hexo 建立博客</h1><h2 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h2><ul>
<li>优点：方便免费，一次准备好环境后，只需要进行写作上传即可。</li>
<li>缺点：暂时还没有被搜索引擎抓取？（用来回顾学的东西）<a id="more"></a>
<h2 id="Rough-Flow"><a href="#Rough-Flow" class="headerlink" title="Rough Flow"></a>Rough Flow</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3></li>
<li>Github</li>
<li>Git bash<ul>
<li>官网下载，安装的时候注意各种选项是否勾选，细看（虽然不影响结果，使用舒适度上有区别）</li>
<li>在vscode中设置terminal为bash，可以使用shell命令。</li>
</ul>
</li>
<li>node.js<ul>
<li>官网下载及其慢，找到版本后，<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">淘宝镜像</a></li>
<li><code>npm -version</code> 测试</li>
</ul>
</li>
<li>Hexo<ul>
<li><a href="https://hexo.io/zh-cn/docs/">官网中文安装教程</a>, 安装<code>npm install -g hexo-cli</code>。</li>
<li><code>npm install hexo-deployer-git --save</code>，防止depoly出现问题。</li>
</ul>
</li>
<li>Next theme(在后面安装)</li>
</ul>
<h3 id="初次配置-Windows下使用vscode-bash-terminal-git-bash，流程和Linux下一样"><a href="#初次配置-Windows下使用vscode-bash-terminal-git-bash，流程和Linux下一样" class="headerlink" title="初次配置(Windows下使用vscode bash terminal/git bash，流程和Linux下一样)"></a>初次配置(Windows下使用vscode bash terminal/git bash，流程和Linux下一样)</h3><ol>
<li>github操作添加ssh-key，新建一个<code>$&#123;MyAccountName&#125;.github.io</code>的repo。</li>
<li>本地新建一个文件夹，方便同步建在OneDrive。</li>
</ol>
<ul>
<li><code>mkdir -p ~/OnDrive/StefanChaos.github.io</code></li>
</ul>
<ol start="3">
<li>初始化hexo</li>
</ol>
<ul>
<li><code>cd ~/OnDrive/StefanChaos.github.io</code></li>
<li><code>hexo init</code></li>
<li><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code> 安装next主题，并在<code>_config.yaml</code>中修改<code>theme: next</code>。</li>
</ul>
<ol start="4">
<li>个性化功能</li>
</ol>
<ul>
<li><code>code ./_config.yaml</code>修改title等，<a href="https://hexo.io/zh-cn/docs/">Hexo官网</a>。</li>
<li><code>code ./themes/next/_config.yaml</code>修改排版，我改了codeblock/menu/search_local<a href="http://theme-next.iissnan.com/theme-settings.html">主题Next官网</a>。</li>
</ul>
<ol start="5">
<li>配置tags &amp; categories</li>
</ol>
<ul>
<li><code>hexo new page tags/categories</code>, 打开<code>source/tags/*.md</code>加入。根据两次安装分别选择对应的type写入。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">type: tags</span><br><span class="line"><span class="section"># type: categories</span></span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="6">
<li>远程部署地址(重要)<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&#x27;https://github.com/StefanChaos/StefanChaos.github.io&#x27;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">&#x27;master&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## for local search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p><code>hexo server</code>会在<code>http://localhost:4000</code>上生成网页预览。</p>
<h3 id="上传到远端"><a href="#上传到远端" class="headerlink" title="上传到远端"></a>上传到远端</h3><ol>
<li><code>hexo generate</code></li>
<li><code>hexo deploy</code></li>
</ol>
<h3 id="日常使用流程"><a href="#日常使用流程" class="headerlink" title="日常使用流程"></a>日常使用流程</h3><ol>
<li><code>hexo new &quot;xxxxxxx&quot;</code></li>
<li><code>hexo server</code>预览效果</li>
<li><code>hexo generate</code></li>
<li><code>hexo deploy</code>上传到远端</li>
</ol>
]]></content>
      <categories>
        <category>Tools</category>
        <category>Write</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>hexo</tag>
        <tag>bash</tag>
        <tag>vscode</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Initialization scripts for bash, git and vim</title>
    <url>/2021/01/09/page/</url>
    <content><![CDATA[<h1 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h1><p>bash采用<code>own.bashrc</code>的方式配置，需要在<code>.bashrc</code>中source该脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -f ~/own.bashrc ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">source</span> ~/own.bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>然后把脚本放到<code>~/own.bashrc</code>中。</p>
<a id="more"></a>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># ====================================================================================================</span><br><span class="line"># local configurable <span class="keyword">for</span> .bashrc, following code should <span class="keyword">be</span> <span class="keyword">insert</span> in ~/.bashrc</span><br><span class="line">#</span><br><span class="line"># if [ -f ~/own.bashrc ]; then</span><br><span class="line"># 	<span class="keyword">source</span> ~/own.bashrc</span><br><span class="line"># fi</span><br><span class="line"># ====================================================================================================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ====================================================================================================</span><br><span class="line"># PS1 settings with green frontground <span class="built_in">and</span> white background</span><br><span class="line">#</span><br><span class="line">#                   black <span class="keyword">red</span> green yellow blue purple cyan white</span><br><span class="line">#   frontground     <span class="number">30</span>                                          <span class="number">37</span></span><br><span class="line">#   background      <span class="number">40</span>                                          <span class="number">47</span></span><br><span class="line">#   eg. [chaos@dell ~/]$ </span><br><span class="line">#  ====================================================================================================</span><br><span class="line">export PS1=<span class="string">&quot;\[\e[36;47m\][\[\e[36;47m\]\u\[\e[36;47m\]@\h \[\e[36;47m\]\w]\[\e[0m\]\\$ &quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ====================================================================================================</span><br><span class="line"># local alias</span><br><span class="line"># reference: oh-my-bash</span><br><span class="line"># ====================================================================================================</span><br><span class="line">alias chaos=<span class="string">&#x27;cd /ssd/proj/ic/wa/chaos&#x27;</span></span><br><span class="line">alias <span class="keyword">cp</span>=<span class="string">&#x27;cp -ivr&#x27;</span>                          # Preferred <span class="string">&#x27;cp&#x27;</span> implementation</span><br><span class="line">alias rm=<span class="string">&#x27;rm -rf&#x27;</span>                           # Preferred <span class="string">&#x27;rm&#x27;</span> implementation </span><br><span class="line">alias mv=<span class="string">&#x27;mv -iv&#x27;</span>                           # Preferred <span class="string">&#x27;mv&#x27;</span> implementation</span><br><span class="line">alias <span class="built_in">mkdir</span>=<span class="string">&#x27;mkdir -pv&#x27;</span>                     # Preferred <span class="string">&#x27;mkdir&#x27;</span> implementation</span><br><span class="line">alias <span class="keyword">ll</span>=<span class="string">&#x27;ls -lAFh&#x27;</span>                         # Preferred <span class="string">&#x27;ls&#x27;</span> implementation</span><br><span class="line">alias less=<span class="string">&#x27;less -FSRXc&#x27;</span>                    # Preferred <span class="string">&#x27;less&#x27;</span> implementation</span><br><span class="line">alias nano=<span class="string">&#x27;nano -W&#x27;</span>                        # Preferred <span class="string">&#x27;nano&#x27;</span> implementation</span><br><span class="line">alias wget=<span class="string">&#x27;wget -c&#x27;</span>                        # Preferred <span class="string">&#x27;wget&#x27;</span> implementation (resume download)</span><br><span class="line">alias <span class="keyword">c</span>=<span class="string">&#x27;clear&#x27;</span>                             # <span class="keyword">c</span>:            Clear terminal <span class="keyword">display</span></span><br><span class="line">alias path=<span class="string">&#x27;echo -e $&#123;PATH//:/\\n&#125;&#x27;</span>         # path:         Echo <span class="keyword">all</span> <span class="built_in">executable</span> Paths</span><br><span class="line">alias show_options=<span class="string">&#x27;shopt&#x27;</span>                  # Show_option<span class="variable">s:</span> <span class="keyword">display</span> bash <span class="keyword">options</span> settings</span><br><span class="line">alias fix_stty=<span class="string">&#x27;stty sane&#x27;</span>                  # fix_stty:     Restore terminal settings when screwed <span class="keyword">up</span></span><br><span class="line">alias fix_term=<span class="string">&#x27;echo -e &quot;\033c&quot;&#x27;</span>            # fix_term:     Reset the conosle.  Similar <span class="keyword">to</span> the reset <span class="keyword">command</span></span><br><span class="line">alias cic=<span class="string">&#x27;set completion-ignore-case On&#x27;</span>   # cic:          Make <span class="keyword">tab</span>-completion case-insensitive</span><br><span class="line">alias src=<span class="string">&#x27;source ~/.bashrc&#x27;</span>                # src:          Reload .bashrc <span class="keyword">file</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ====================================================================================================</span><br><span class="line"># anaconda init commands</span><br><span class="line"># ====================================================================================================</span><br><span class="line"># # &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span><br><span class="line"># # !! Contents within this block are managed by <span class="string">&#x27;conda init&#x27;</span> !!</span><br><span class="line"># __conda_setup=<span class="string">&quot;$(&#x27;/home/chaos/anaconda3/bin/conda&#x27; &#x27;shell.bash&#x27; &#x27;hook&#x27; 2&gt; /dev/null)&quot;</span></span><br><span class="line"># if [ $? -eq 0 ]; then</span><br><span class="line">#     <span class="built_in">eval</span> <span class="string">&quot;$__conda_setup&quot;</span></span><br><span class="line"># <span class="keyword">else</span></span><br><span class="line">#     if [ -f &quot;/home/chaos/anaconda3/etc/profile.d/conda.sh&quot; ]; then</span><br><span class="line">#         . <span class="string">&quot;/home/chaos/anaconda3/etc/profile.d/conda.sh&quot;</span></span><br><span class="line">#     <span class="keyword">else</span></span><br><span class="line">#         export PATH=<span class="string">&quot;/home/chaos/anaconda3/bin:$PATH&quot;</span></span><br><span class="line">#     fi</span><br><span class="line"># fi</span><br><span class="line"># unset __conda_setup</span><br><span class="line"># # &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p>git由<code>.gitconfig</code>文件控制，放在<code>~/.gitconfig</code>下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">	name = chaos</span><br><span class="line">	email = chaos@picocom.com</span><br><span class="line">[<span class="built_in">alias</span>]</span><br><span class="line">	st = status</span><br><span class="line">	lg = <span class="built_in">log</span> --color --graph --pretty=format:<span class="string">&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27;</span> --abbrev-commit</span><br><span class="line">	d = difftool</span><br><span class="line">    br = branch</span><br><span class="line">    sw = switch</span><br><span class="line">    ct = checkout</span><br><span class="line">[diff]</span><br><span class="line">	tool = gvimdiff</span><br><span class="line">[difftool]</span><br><span class="line">	prompt = <span class="literal">false</span></span><br><span class="line">[push]</span><br><span class="line">	default = simple</span><br><span class="line"></span><br><span class="line"><span class="comment"># ====================================================================================================</span></span><br><span class="line"><span class="comment"># In windwos, set vscode as difftool</span></span><br><span class="line"><span class="comment"># ====================================================================================================</span></span><br><span class="line"><span class="comment"># [diff]</span></span><br><span class="line"><span class="comment"># 	tool = default-difftool</span></span><br><span class="line"><span class="comment"># [difftool &quot;default-difftool&quot;]</span></span><br><span class="line"><span class="comment"># 	cmd = code --wait --diff $LOCAL $REMOTE</span></span><br><span class="line"><span class="comment"># [core]</span></span><br><span class="line"><span class="comment"># 	editor = code --wait</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h1><p>vim 需要一些插件，不知道怎么上传，放到<code>source/scripts</code>下。这个配置不需要插件。。。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> virtualedit=all</span><br><span class="line"><span class="built_in">set</span> showcmd</span><br><span class="line"><span class="built_in">set</span> showmode</span><br><span class="line"><span class="built_in">set</span> fdm=marker</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> tags=./tags;,tags</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;execute pathogen#infect()</span></span><br><span class="line"><span class="string">call pathogen#infect()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> ====================================================================================================</span><br><span class="line"><span class="string">&quot; file config</span></span><br><span class="line"><span class="string">&quot;</span> ====================================================================================================</span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"><span class="built_in">set</span> noundofile</span><br><span class="line"><span class="built_in">set</span> noswapfile</span><br><span class="line"><span class="built_in">set</span> nowrap</span><br><span class="line"><span class="built_in">set</span> is</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; ====================================================================================================</span></span><br><span class="line"><span class="string">&quot;</span> Font</span><br><span class="line"><span class="string">&quot; ====================================================================================================</span></span><br><span class="line"><span class="string">if has(&#x27;win32&#x27;)</span></span><br><span class="line"><span class="string">    set guifont=Source\ Code\ Pro:h14</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    let g:solarized_termcolors=256</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> ====================================================================================================</span><br><span class="line"><span class="string">&quot; color solarized</span></span><br><span class="line"><span class="string">&quot;</span> ====================================================================================================</span><br><span class="line">color default</span><br><span class="line">colorscheme desert</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> has(<span class="string">&#x27;gui_running&#x27;</span>)</span><br><span class="line">    <span class="string">&quot;set background=light</span></span><br><span class="line"><span class="string">    set background=dark</span></span><br><span class="line"><span class="string">    set lines=100</span></span><br><span class="line"><span class="string">    set columns=120</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    set background=dark</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string">&quot;</span> <span class="built_in">set</span> guifont=Consolas:h12</span><br><span class="line">autocmd FileType make <span class="built_in">set</span> noexpandtab</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; ====================================================================================================</span></span><br><span class="line"><span class="string">&quot;</span> leader shortcuts</span><br><span class="line"><span class="string">&quot; ====================================================================================================</span></span><br><span class="line"><span class="string">let mapleader=&#x27;,&#x27;</span></span><br><span class="line"><span class="string">nnoremap &lt;buffer&gt; &lt;leader&gt;x &lt;ESC&gt;i#</span></span><br><span class="line"><span class="string">autocmd FileType * nnoremap &lt;buffer&gt; &lt;leader&gt;x &lt;ESC&gt;i#</span></span><br><span class="line"><span class="string">autocmd FileType c* nnoremap &lt;buffer&gt; &lt;leader&gt;x &lt;ESC&gt;i//</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;bc &lt;ESC&gt;&lt;ESC&gt;O&lt;ESC&gt;,x ====================================================================================================&lt;ESC&gt;&lt;ESC&gt;j^</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;ac &lt;ESC&gt;&lt;ESC&gt;o&lt;ESC&gt;,x ====================================================================================================&lt;ESC&gt;&lt;ESC&gt;k^</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;ic &lt;ESC&gt;&lt;ESC&gt;^,x &lt;ESC&gt;&lt;ESC&gt;^</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;c  &lt;ESC&gt;&lt;ESC&gt;,bc,ac,icla</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;=  &lt;ESC&gt;&lt;ESC&gt;a ====================================================================================================&lt;ESC&gt;o</span></span><br><span class="line"><span class="string">nmap &lt;silent&gt; &lt;leader&gt;h :nohl&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;</span>tabular</span><br><span class="line">vmap &lt;leader&gt;t* :Tabularize /\(input\\|output\\|reg\\|wire\)\zs\s/l0c0l0&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line">vmap &lt;leader&gt;t, :Tabularize /,&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line">nmap &lt;leader&gt;t, :Tabularize /,&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line"></span><br><span class="line">vmap &lt;leader&gt;t; :Tabularize /;&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line">nmap &lt;leader&gt;t; :Tabularize /;&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line"></span><br><span class="line">vmap &lt;leader&gt;t9 :Tabularize /(&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line">nmap &lt;leader&gt;t9 :Tabularize /(&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line"></span><br><span class="line">vmap &lt;leader&gt;t0 :Tabularize /)&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line">nmap &lt;leader&gt;t0 :Tabularize /)&lt;CR&gt;&lt;ESC&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;abbrev</span></span><br><span class="line"><span class="string">&quot;</span>iabbrev /// //====================================================================================================</span><br><span class="line">iabbrev _md module</span><br><span class="line">iabbrev _ed endmodule</span><br><span class="line">iabbrev _be begin&lt;CR&gt;end&lt;CR&gt;</span><br><span class="line">iabbrev _alpp always @(posedge * or posedge _)</span><br><span class="line">iabbrev _alpn always @(posedge * or negedge _)</span><br><span class="line">iabbrev _alc  always @(*)</span><br><span class="line">iabbrev _i input</span><br><span class="line">iabbrev _o output</span><br><span class="line">iabbrev _r reg</span><br><span class="line">iabbrev _w wire</span><br><span class="line">iabbrev _lp localparam</span><br><span class="line">iabbrev _p parameter</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> isfname+=&#123;,&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;========verilog automatic</span></span><br><span class="line"><span class="string">set langmenu=en</span></span><br><span class="line"><span class="string">let <span class="variable">$LANG</span>=&#x27;en&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> fileencoding=utf-8,bg18030,latin1</span><br><span class="line"><span class="built_in">set</span> fileencodings=utf-8,gb2312,gbk,gb18030</span><br><span class="line"><span class="built_in">set</span> termencoding=utf-8</span><br><span class="line"><span class="built_in">set</span> fileformats=dos</span><br><span class="line"><span class="string">&quot;set encoding=prc</span></span><br><span class="line"><span class="string">set encoding=utf-8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> guifont=Liberation\ Mono\ 14</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;tab conf</span></span><br><span class="line"><span class="string">set tabstop=4</span></span><br><span class="line"><span class="string">set shiftwidth=4</span></span><br><span class="line"><span class="string">set softtabstop=4</span></span><br><span class="line"><span class="string">set expandtab</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string">set backspace=indent,eol,start</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"><span class="built_in">set</span> nu</span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"><span class="built_in">set</span> incsearch</span><br><span class="line"><span class="built_in">set</span> cursorline</span><br><span class="line"><span class="string">&quot;set nowrapscan</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let b:match_words = &#x27;\&lt;function\&gt;:\&lt;endfunction\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;task\&gt;:\&lt;endtask\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;module\&gt;:\&lt;endmodule\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;begin\&gt;:\&lt;end\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;case\&gt;:\&lt;endcase\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;class\&gt;:\&lt;endclass\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;for\&gt;:\&lt;endfor\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;while\&gt;:\&lt;endwhile\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;specify\&gt;:\&lt;endspecify\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;generate\&gt;:\&lt;endgenerate\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;\&lt;\(ifdef\|ifndef\)\&gt;:\&lt;\(else\|elsif\)\&gt;:\&lt;endif\&gt;,&#x27;</span></span><br><span class="line"><span class="string">					\ . &#x27;`\&lt;\(ifdef\|ifndef\)\&gt;:`\&lt;\(else\|elsif\)\&gt;:`\&lt;endif\&gt;&#x27;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;====restore your cursor position in a file over several editing sessions</span></span><br><span class="line"><span class="string">au BufReadPost * if line(&quot;</span><span class="string">&#x27;\&quot;&quot;) &gt; 0|if line(&quot;&#x27;</span>\&quot;<span class="string">&quot;) &lt;= line(&quot;</span>$<span class="string">&quot;)|exe(&quot;</span>norm <span class="string">&#x27;\&quot;&quot;)|else|exe &quot;norm $&quot;|endif|endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let t:RtlTreeVlogDefine = 1</span></span><br><span class="line"><span class="string">&quot;map &lt;F4&gt; :NERDTree&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;map &lt;F5&gt; :RtlTree&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; ====================================================================================================&quot;</span></span><br><span class="line"><span class="string">&quot;  Removes trailing spaces</span></span><br><span class="line"><span class="string">&quot; ====================================================================================================&quot;</span></span><br><span class="line"><span class="string">nmap &lt;F9&gt; :%s/\s\+$//&lt;CR&gt;</span></span><br><span class="line"><span class="string">highlight ExtraWhitespace ctermbg=red guibg=red</span></span><br><span class="line"><span class="string">match ExtraWhitespace /\s\+$/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; ====================================================================================================</span></span><br><span class="line"><span class="string">&quot; auto pairs</span></span><br><span class="line"><span class="string">&quot; ====================================================================================================</span></span><br><span class="line"><span class="string">inoremap &#x27;</span> <span class="string">&#x27;&#x27;</span>&lt;ESC&gt;i</span><br><span class="line">inoremap <span class="string">&quot; &quot;</span><span class="string">&quot;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap ( ()&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap [ []&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap &#123; &#123;&#125;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Tools</category>
        <category>scripts</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>git</tag>
        <tag>vim</tag>
      </tags>
  </entry>
</search>
